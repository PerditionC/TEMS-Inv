<!--
The MIT License (MIT)

Copyright (c) 2009-2016 David Wendland

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:DW.WPFToolkit.Controls">

    <SolidColorBrush Color="#FFA5ACB5" x:Key="OutherBorderBrush" />
    <SolidColorBrush Color="#FFFFFFFF" x:Key="InnerBorderBrush" />
    <LinearGradientBrush x:Key="ButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEFF3F6" Offset="0"/>
        <GradientStop Color="#FFEDF1F5" Offset="0.119"/>
        <GradientStop Color="#FFEDF1F6" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush Color="#FF919BA6" x:Key="PressedOutherBorderBrush" />
    <SolidColorBrush Color="#FFB3B9C1" x:Key="PressedInnerBorderBrush" />
    <SolidColorBrush Color="#FFC0C7CF" x:Key="PressedButtonBackground" />
    
    <LinearGradientBrush x:Key="MainPanelBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE8ECF0"/>
        <GradientStop Color="White" Offset="0.5"/>
        <GradientStop Color="#FFEAEBED" Offset="0.5"/>
        <GradientStop Color="#FFE8ECF0" Offset="1"/>
    </LinearGradientBrush>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style TargetType="{x:Type Controls:PagingControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="PreviousBarPosition" Value="Left" />
        <Setter Property="NextBarPosition" Value="Right" />
        <Setter Property="JumpBarPosition" Value="Top" />
        <Setter Property="HorizontalNavigationButtonsAlignment" Value="Center" />
        <Setter Property="VerticalNavigationButtonsAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PagingControl}">
                    <Border BorderBrush="#FFA5ACB5" BorderThickness="1" CornerRadius="2,2,0,0">
                        <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="2,2,0,0">
                            <DockPanel>
                                <Grid DockPanel.Dock="{TemplateBinding JumpBarPosition}" Background="#FFE8ECF0">
                                    <Controls:PagingJumpBar AutomationProperties.AutomationId="CUI_PagingJumpBar"
                                                            ItemsSource="{Binding ButtonItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Visibility="{Binding ShowJumpBar, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center">
                                    </Controls:PagingJumpBar>
                                </Grid>
                                <Grid DockPanel.Dock="{TemplateBinding PreviousBarPosition}" Background="{StaticResource MainPanelBackground}">
                                    <Controls:PagingNavigateButton AutomationProperties.AutomationId="CUI_PreviousNavigationButton"
                                                                   VerticalAlignment="{TemplateBinding VerticalNavigationButtonsAlignment}"
                                                                   HorizontalAlignment="{TemplateBinding HorizontalNavigationButtonsAlignment}"
                                                                   x:Name="PART_Previous">
                                    </Controls:PagingNavigateButton>
                                </Grid>
                                <Grid DockPanel.Dock="{TemplateBinding NextBarPosition}" Background="{StaticResource MainPanelBackground}">
                                    <Controls:PagingNavigateButton AutomationProperties.AutomationId="CUI_NextNavigationButton"
                                                                   VerticalAlignment="{TemplateBinding VerticalNavigationButtonsAlignment}"
                                                                   HorizontalAlignment="{TemplateBinding HorizontalNavigationButtonsAlignment}"
                                                                   x:Name="PART_Next">
                                        <Controls:PagingNavigateButton.LayoutTransform>
                                            <RotateTransform Angle="180" />
                                        </Controls:PagingNavigateButton.LayoutTransform>
                                    </Controls:PagingNavigateButton>
                                </Grid>
                                
                                <Grid x:Name="PART_MainGrid">
                                    <Grid.Clip>
                                        <RectangleGeometry x:Name="PART_PresenterArea" />
                                    </Grid.Clip>
                                    
                                    <ContentControl x:Name="PART_ContentPresenter" Content="{TemplateBinding SelectedItem}">
                                        <ContentControl.RenderTransform>
                                            <TranslateTransform />
                                        </ContentControl.RenderTransform>
                                    </ContentControl>
                                    
                                    <Rectangle x:Name="PART_VisualArea">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PreviousBarPosition" Value="Top">
                            <Setter TargetName="PART_Previous" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="PreviousBarPosition" Value="Bottom">
                            <Setter TargetName="PART_Previous" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="NextBarPosition" Value="Top">
                            <Setter TargetName="PART_Next" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="NextBarPosition" Value="Bottom">
                            <Setter TargetName="PART_Next" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:PagingItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ContentTemplate" Value="{Binding ItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:PagingControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PagingItem}">
                    <DockPanel>
                        <Border BorderBrush="#FF6F7074" DockPanel.Dock="Top" Background="#FFE8ECF0">
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" ContentSource="Header" />
                        </Border>
                        <Border BorderBrush="#FF6F7074" DockPanel.Dock="Bottom" Background="#FFE8ECF0">
                            <ContentControl Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}" />
                        </Border>
                        <Border BorderBrush="#FF6F7074" BorderThickness="1" DockPanel.Dock="Bottom" Background="#FFE8ECF0">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:PagingJumpBar}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style TargetType="{x:Type Controls:PagingJumpBarItem}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush GradientOrigin="0.366,0.321">
                    <GradientStop Color="White"/>
                    <GradientStop Color="#FFF0FF9B" Offset="1"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFD0D0D0" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PagingJumpBarItem}">
                    <Ellipse Width="8" Height="8" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Cursor="Hand" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.366,0.321">
                                        <GradientStop Color="#FF84A6E5"/>
                                        <GradientStop Color="#FF0056FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="#FFABA9A9" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:PagingNavigateButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PagingNavigateButton}">
                    <Border x:Name="PART_OutherBorder" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="True">
                        <Border x:Name="PART_InnerBorder" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}" Padding="0,4">
                            <Path x:Name="PART_Content" Margin="1" Stroke="#FF504A4A" Data="M 5,0 L 0,5 5,10" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_OutherBorder" Property="BorderBrush" Value="{StaticResource OutherBorderBrush}" />
                            <Setter TargetName="PART_InnerBorder" Property="BorderBrush" Value="{StaticResource InnerBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_OutherBorder" Property="BorderBrush" Value="{StaticResource PressedOutherBorderBrush}" />
                            <Setter TargetName="PART_InnerBorder" Property="BorderBrush" Value="{StaticResource PressedInnerBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PressedButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="Stroke" Value="LightSkyBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
