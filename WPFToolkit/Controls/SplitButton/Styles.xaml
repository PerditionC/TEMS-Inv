<!--
The MIT License (MIT)

Copyright (c) 2009-2016 David Wendland

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:DW.WPFToolkit.Controls">

    <Style TargetType="{x:Type Controls:SplitButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:SplitButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="16" />
                        </Grid.ColumnDefinitions>

                        <Controls:SplitToggleButton AutomationProperties.AutomationId="CUI_MainButton"
                                                    OutherBorderThickness="1,1,0,1"
                                                    OutherCornerRadius="3,0,0,3"
                                                    InnerBorderThickness="1"
                                                    InnerCornerRadius="2,0,0,2"
                                                    Content="{TemplateBinding Content}"
                                                    x:Name="PART_ContentButton"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <Controls:SplitToggleButton AutomationProperties.AutomationId="CUI_DropDownToggleButton"
                                                    Grid.Column="1"
                                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    OutherBorderThickness="1"
                                                    OutherCornerRadius="0,3,3,0"
                                                    InnerBorderThickness="1"
                                                    InnerCornerRadius="0,2,2,0">
                            <Path Data="M 0,0 L 7,0 3.5,4 Z" Fill="Black" />
                        </Controls:SplitToggleButton>

                        <Popup x:Name="PART_Popup"
                               Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Border BorderThickness="1" BorderBrush="#FF959595" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border BorderThickness="1" BorderBrush="#FFF5F5F5">
                                    <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="22" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Border BorderThickness="0,0,1,0" BorderBrush="#FFE2E3E3" Background="#FFF1F1F1" />
                                                <Border Grid.Column="1" BorderThickness="1,0,0,0" BorderBrush="#FFFFFFFF" Background="#FFF5F5F5" />
                                            </Grid>
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

    <Style TargetType="{x:Type Controls:SplitToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:SplitToggleButton}">
                    <Border x:Name="border1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding OutherBorderThickness}" CornerRadius="{TemplateBinding OutherCornerRadius}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border Opacity="0.4" x:Name="border2" Margin="0,0,-1,-1" BorderThickness="1,1,0,0" BorderBrush="Black" CornerRadius="{TemplateBinding InnerCornerRadius}" Visibility="Collapsed" ClipToBounds="True" >
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian" />
                                </Border.Effect>
                            </Border>
                            <Border x:Name="border" BorderThickness="{TemplateBinding InnerBorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFEFEFE" Offset="0.133"/>
                                        <GradientStop Color="#FFE9E9E9" Offset="0.987"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border1" Value="#FF3C7FB1"/>
                            <Setter Property="BorderBrush" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFDFEFF" Offset="0.09"/>
                                        <GradientStop Color="#FFDAEFFB" Offset="0.977"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="border1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE7F5FD" Offset="0.033"/>
                                        <GradientStop Color="#FFD9F0FC" Offset="0.500"/>
                                        <GradientStop Color="#FFBEE6FD" Offset="0.500"/>
                                        <GradientStop Color="#FFABDBF6" Offset="0.978"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="Background" TargetName="border1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC2E4F6" Offset="0.500"/>
                                        <GradientStop Color="#FFABDAF3" Offset="0.500"/>
                                        <GradientStop Color="#FF91CCEB" Offset="0.995"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="border2" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:SplitButtonItem}">
        <Setter Property="Margin" Value="0,0,-4,0" />
        <Setter Property="Padding" Value="0,0,4,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:SplitButtonItem}">
                    <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:SplitButton}}}">
                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="2" Margin="2,2,6,2" x:Name="PART_Background" Background="Transparent">
                            <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="2" x:Name="PART_InnerBackground" >
                                <ContentPresenter Margin="24,0,0,0" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="BorderBrush" Value="#F0AFDEF1" />
                            <Setter TargetName="PART_InnerBackground" Property="BorderBrush" Value="#F0EDF4F7" />
                            <Setter TargetName="PART_InnerBackground" Property="Background" Value="#F0E4F1F7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
    
