<views:BasicWindowBase x:Class="TEMS_Inventory.views.ItemInstanceManagementWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:inventoryModel="clr-namespace:TEMS.InventoryModel.entity.db;assembly=InventoryModel"
    xmlns:dbQuery="clr-namespace:TEMS.InventoryModel.entity.db.query;assembly=InventoryModel"
    xmlns:WPFToolkit="clr-namespace:DW.WPFToolkit.Controls;assembly=WPFToolkit"
    xmlns:WPFConverters="clr-namespace:DW.WPFToolkit.Converters;assembly=WPFToolkit"
    xmlns:views="clr-namespace:TEMS_Inventory.views"
    xmlns:uc="clr-namespace:TEMS_Inventory.UserControls"
    mc:Ignorable="d"
    Icon="{StaticResource LogoImage}"
    Title="Item Inventory Management"
    WindowStartupLocation="CenterOwner"
    MinHeight="400" MinWidth="600"
    Height="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenHeight}, Converter={WPFConverters:RatioConverter}, ConverterParameter='0.9'}" 
    >
    <Window.Width>
        <MultiBinding Converter="{WPFConverters:RatioConverter}">
            <Binding Source="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" />
            <Binding Source="0.9" />
            <Binding Source="1024" />
        </MultiBinding>
    </Window.Width>
    <Window.Resources>
        <WPFConverters:AndMultiValueConverter x:Key="AndMultiValueConverter" />
    </Window.Resources>

    <DockPanel Background="OldLace" x:Name="rootItem">
        <uc:ItemSearchFilter x:Name="isf" DockPanel.Dock="Top" Margin="2" DataContext="{Binding SearchFilterOptions}" />

        <!--  change so left is treeview, on select item open in right side for details
        Note: no add or delete as that is done on Item view (since effects all sites)
        bottom of details are buttons to mark item as damaged, missing, service, deploy, expiration
        next to item # and description is button to edit items [if admin] -->
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Column="0" Grid.Row="0"  Margin="3,2,2,3" >
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
                    <CheckBox HorizontalAlignment="Center" Margin="3" Content="{Binding SearchResult.ExpandCollapseCommandText}" IsThreeState="False" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}" Command="{Binding SearchResult.ExpandCollapseCommand}" Visibility="{Binding ItemSearchFilter.SearchFilter.SearchFilterVisible,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock x:Name="StatusBar" HorizontalAlignment="Stretch" Margin="10,0,10,2" Text="{Binding Details.StatusMessage, Converter={StaticResource NullableToEmptyStringConverter}}"  Height="22" Opacity="0.9" />
                </StackPanel>
                <uc:ItemSearchResults x:Name="DisplayItemList" DataContext="{Binding SearchResult}" />
            </DockPanel>

            <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" />

            <DockPanel Grid.Column="2" Grid.Row="0" Margin="5,2,2,3" DataContext="{Binding Details}" >
                <DockPanel DockPanel.Dock="Bottom" Margin="3">
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Bottom" Margin="0,7,0,5" IsEnabled="{Binding IsCurrentItemEditable}">
                        <WPFToolkit:SplitButton Content="Ser_vice"  Command="{Binding AddServiceDetailsCommand}" Width="80" Margin="10,0" >
                            <WPFToolkit:SplitButtonItem Content="Service" Command="{Binding AddServiceDetailsCommand}" />
                            <WPFToolkit:SplitButtonItem Content="Service History" Command="{Binding ViewServiceHistoryCommand}" />
                        </WPFToolkit:SplitButton>
                        <WPFToolkit:SplitButton Content="Deployment" CommandParameter="{Binding CurrentItem}" Command="{Binding ViewDeployRecoverHistoryCommand}" Width="85" Margin="10,0" >
                            <WPFToolkit:SplitButtonItem CommandParameter="{Binding CurrentItem}" Command="{Binding DeployRecoverItemCommand}" Content="Deploy" />
                            <WPFToolkit:SplitButtonItem CommandParameter="{Binding CurrentItem}" Command="{Binding DeployRecoverItemCommand}" Content="Recover" />
                            <WPFToolkit:SplitButtonItem Content="Deployment History" Command="{Binding ViewDeployRecoverHistoryCommand}" />
                        </WPFToolkit:SplitButton>
                        <WPFToolkit:SplitButton Content="Dama_ged"  Command="{Binding AddDamagedDetailsCommand}" Width="80" Margin="10,0" >
                            <WPFToolkit:SplitButtonItem Content="Damaged" Command="{Binding AddDamagedDetailsCommand}" />
                            <WPFToolkit:SplitButtonItem Content="Missing" Command="{Binding AddMissingDetailsCommand}" />
                            <WPFToolkit:SplitButtonItem Content="Damaged/Missing History" Command="{Binding ViewDamagedMissingOverviewCommand}" />
                        </WPFToolkit:SplitButton>
                    </WrapPanel>

                    <Button x:Name="SaveButton" Margin="0,3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="29" Width="80" Command="{Binding SaveCommand}" Content="_Save" />
                </DockPanel>
                <GroupBox BorderThickness="1" BorderBrush="Gray" Background="AliceBlue" MinWidth="50" >
                    <GroupBox.Header>
                        <Border Padding="3" CornerRadius="5" BorderThickness="1" BorderBrush="LightGray" SnapsToDevicePixels="True" Background="White">
                            <TextBox Background="Transparent" BorderThickness="0" ToolTip="Identifies this unique item instance" IsReadOnly="True">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Text" Value="{Binding itemNumber, Mode=OneWay}"/>
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentItem}" Value="{x:Null}">
                                                <Setter Property="Text" Value="No item selected"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Border>
                    </GroupBox.Header>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <DockPanel DockPanel.Dock="Bottom" Margin="3">
                            <WPFToolkit:TitledItemsControl Margin="2,10,2,2" x:Name="DetailView" >
                                <WPFToolkit:TitledItem Title="DB key:" Visibility="{Binding IsDebugMode, Converter={StaticResource BooleanToVisibilityConverter}}" >
                                    <TextBox Text="{Binding guid}" IsReadOnly="True" IsEnabled="{Binding IsCurrentItemEditable}" ToolTip="Globally Unique Identifier, primary key for database (read-only)" Visibility="Visible" />  <!-- normally Collapsed except when debugging -->
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Item:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <DockPanel>
                                        <Button DockPanel.Dock="Right" Content="_Edit Item" ToolTip="Shortcut to open Item Management window" Command="{Binding OpenEditItemWindowCommand}" />
                                        <TextBox x:Name="tbName" Text="{Binding item.itemType.name, Mode=OneWay}" IsReadOnly="True" ToolTip="Identifies what the item is" />
                                    </DockPanel>
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Site:">
                                    <TextBox Text="{Binding siteLocation.name}" IsEnabled="{Binding IsCurrentItemEditable}" IsReadOnly="True"  ToolTip="Where this item is (the site of the equipment)" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Serial #:" IsEnabled="{Binding CanHaveSerialNumber}">
                                    <TextBox Text="{Binding serialNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Serial # or other unique identifier for this item (usually blank)" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Grant #:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <TextBox Text="{Binding grantNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Information to match item with a grant associated with this item" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Status:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <ComboBox x:Name="StatusFilter" DisplayMemberPath="name" ItemsSource="{Binding Path=DataContext.SearchFilterOptions.SearchFilter.ItemStatusValues, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" SelectedItem="{Binding status}" ToolTip="Select status" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="In Service:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <DatePicker SelectedDate="{Binding inServiceDate, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" IsTodayHighlighted="True" SelectedDateFormat="Long" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Removed:" IsEnabled="{Binding HasRemovedFromServiceDate}" ToolTip="The date item was removed from service, should be left blank if still in service">
                                    <DatePicker Text="{Binding removedServiceDate, Mode=TwoWay, Converter={StaticResource NullableToEmptyStringConverter}}" IsTodayHighlighted="True" SelectedDateFormat="Long" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Seal Broken:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding isSealbroken}" />
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Has Barcode:" IsEnabled="{Binding IsCurrentItemEditable}" ToolTip="Barcode has been printed / barcode is affixed to item">
                                    <DockPanel>
                                        <Button DockPanel.Dock="Right" Content="Print Barcode Label" ToolTip="Shortcut to open View Print Labels window" Command="{Binding OpenPrintBarcodeWindowCommand}" />
                                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding hasBarcode}" />
                                    </DockPanel>
                                </WPFToolkit:TitledItem>
                                <WPFToolkit:TitledItem Title="Notes:" IsEnabled="{Binding IsCurrentItemEditable}">
                                    <TextBox Text="{Binding notes}" AcceptsReturn="True" AcceptsTab="True" MinLines="3" MaxLines="5" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                    <!-- xml:lang="en-US" SpellCheck.IsEnabled="True" Note:MS implementation throws Exceptions but works with Win7/Net4 and possibly others -->
                                </WPFToolkit:TitledItem>
                            </WPFToolkit:TitledItemsControl>
                        </DockPanel>
                    </ScrollViewer>
                </GroupBox>
            </DockPanel>
        </Grid>
    </DockPanel>
</views:BasicWindowBase>
